{"version":3,"file":"static/js/432.c76bb74a.chunk.js","mappings":"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","sources":["components/RegisterPage/RegisterPage.styled.js","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport leaves from '../../images/hero/desktop/leaves.png';\nimport banana from '../../images/hero/desktop/banana.png';\nimport Strawberry from '../../images/hero/desktop/Strawberry.png';\nimport Vector from '../../images/hero/desktop/Vector.png';\nimport leavesRetina from '../../images/hero/desktop/leaves@2x.png';\nimport bananaRetina from '../../images/hero/desktop/banana@2x.png';\nimport StrawberryRetina from '../../images/hero/desktop/Strawberry@2x.png';\nimport VectorRetina from '../../images/hero/desktop/Vector@2x.png';\n\nimport bananaTablet from '../../images/hero/tablet/banana.png';\nimport bananaTabletRetina from '../../images/hero/tablet/banana@2x.png';\nimport StrawberryTablet from '../../images/hero/tablet/Strawberry.png';\nimport StrawberryTabletRetina from '../../images/hero/tablet/Strawberry@2x.png';\nimport leavesTablet from '../../images/login/leaves.png';\nimport leavesTabletRetina from '../../images/login/leaves@2x.png';\nimport VectorTablet from '../../images/hero/tablet/Vector.png';\nimport VectorTabletRetina from '../../images/hero/tablet/Vector@2x.png';\n\nexport const Wrapper = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 100px;\n  @media (min-width: 426px) and (max-width: 1023px) {\n    padding: 160px 32px 419px;\n  }\n  @media (min-width: 1024px) {\n    margin: 0 auto;\n    width: 1280px;\n    padding: 306px 16px 179px;\n  }\n`;\nexport const ButtonWrapper = styled.div`\n  margin-top: 60px;\n  display: grid;\n  gap: 32px;\n  justify-content: center;\n  @media (min-width: 426px) {\n    display: flex;\n    gap: 32px;\n    justify-content: flex-start;\n  }\n`;\nexport const H2 = styled.h2`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes[0]};\n  line-height: ${p => p.theme.lineHeights[0]};\n\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.colors.orange};\n  margin-bottom: 60px;\n  margin-top: 40px;\n  text-align: center;\n  @media (min-width: 426px) {\n    text-align: left;\n  }\n`;\n\nexport const WrapperWithFruits = styled.div`\n  @media (min-width: 426px) and (max-width: 1023px) {\n    background-image: url(${StrawberryTablet}), url(${leavesTablet}), url(${bananaTablet}),\n      url(${VectorTablet});\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: bottom 200px right -80px, top -97px left 0px, bottom 0px right 0px,\n      bottom 0px right 0px;\n    background-size: 391px 384px, 740px 842px, auto, auto;\n\n    @media (min-resolution: 2dppx) {\n      background-image: url(${leavesTabletRetina}), url(${StrawberryTabletRetina}),\n        url(${bananaTabletRetina}), url(${VectorTabletRetina});\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n      background-position: bottom 97px left 0px, bottom 279px right -60px, bottom 0px right 0px,\n        bottom 0px right 0px;\n      background-size: 531px 553px, 291px 284px, 491px 431px, 494px 563px;\n    }\n  }\n  @media (min-width: 1024px) {\n    background-image: url(${leaves}), url(${Strawberry}), url(${banana}), url(${Vector});\n    background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n    background-position: top 0px right 195px, top 506px right 30px, top 0px right 0px,\n      bottom 0px right 0px;\n    background-size: auto, auto, auto, 602px 816px;\n    @media (min-resolution: 2dppx) {\n      background-image: url(${leavesRetina}), url(${StrawberryRetina}), url(${bananaRetina}),\n        url(${VectorRetina});\n      background-repeat: no-repeat, no-repeat, no-repeat, no-repeat;\n      background-position: top 0px right 195px, top 526px right 50px, top 0px right 0px,\n        bottom 0px right 0px;\n      background-size: 746px 846px, 286px 279px, 498px 450px, 602px 816px;\n    }\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\nimport * as yup from 'yup';\nimport { Error, Input, List } from 'components/Form/Form.styled';\nimport { Button } from 'components/Button/Button';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useLogInUserMutation, useRegisterUserMutation } from 'redux/auth';\nimport { useDispatch } from 'react-redux';\nimport { setCredentials, setUser } from 'redux/authSlice';\nimport { ButtonWrapper, H2, Wrapper } from '../components/RegisterPage/RegisterPage.styled';\nimport { WrapperWithFruits } from 'components/RegisterPage/RegisterPage.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport Snowfall from 'react-snowfall';\nimport { ThemeContext } from 'components/Context/Context';\nimport { routes } from 'components/Routes/routes';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(4, 'Name must be more than or equal to 4 letters')\n    .max(50, 'Name must be less than or equal to 50 letters')\n    .required('Name is required field'),\n\n  password: yup\n    .string()\n    .min(6, 'Password must be more than or equal to 6 letters')\n    .max(16, 'Password must be less than or equal to 16 letters')\n    .required('Password is required field'),\n\n  email: yup.string().email('Invalid email').required('Email is required field'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterPage = () => {\n  const { isChristmas } = useContext(ThemeContext);\n  const location = useLocation();\n  const userDataForRegister = location.state?.userDataForRegister;\n\n  localStorage.setItem('params', JSON.stringify(userDataForRegister));\n\n  const navigate = useNavigate();\n  const [registerUser, { status: registerStatus }] = useRegisterUserMutation();\n  const dispatch = useDispatch();\n  const [loginUser, { status: loginStatus }] = useLogInUserMutation();\n  const [isShowPassword, setIsShowPassword] = useState(false);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const userDataForRegisterAll = { ...values, ...userDataForRegister };\n\n    try {\n      const user = await registerUser(userDataForRegisterAll).unwrap();\n      const loginValues = { email: values.email, password: values.password };\n      const userLogin = await loginUser(loginValues).unwrap();\n\n      dispatch(setCredentials(user));\n      dispatch(setUser(userLogin));\n      navigate(routes.diary);\n      resetForm();\n    } catch (error) {\n      console.error('Error registering user:', error);\n    }\n  };\n\n  const handleClick = () => {\n    navigate(routes.login);\n  };\n\n  const handleShowPassword = () => {\n    setIsShowPassword(!isShowPassword);\n  };\n\n  return (\n    <WrapperWithFruits>\n      {isChristmas && <Snowfall />}\n\n      {(registerStatus === 'pending' || loginStatus === 'pending') && <Loader />}\n      <Wrapper>\n        <H2>Register</H2>\n\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n          <Form>\n            <List style={{ display: 'grid', gridTemplateColumns: 'revert' }}>\n              <li>\n                <label>\n                  <Input type='name' name='name' placeholder='Name *' />\n\n                  <ErrorMessage name='name' component={Error} />\n                </label>\n              </li>\n\n              <li>\n                <label>\n                  <Input type='email' name='email' placeholder='Email *' />\n\n                  <ErrorMessage name='email' component={Error} />\n                </label>\n              </li>\n\n              <li>\n                <label style={{ position: 'relative' }}>\n                  <Input\n                    type={isShowPassword ? 'text' : 'password'}\n                    name='password'\n                    placeholder='Password *'\n                    maxLength='16'\n                  />\n\n                  {isShowPassword ? (\n                    <AiFillEyeInvisible\n                      onClick={handleShowPassword}\n                      style={{\n                        position: 'absolute',\n                        top: '0px',\n                        left: '250px',\n                        color: '#FC842D',\n                      }}\n                    />\n                  ) : (\n                    <AiFillEye\n                      onClick={handleShowPassword}\n                      style={{\n                        position: 'absolute',\n                        top: '0px',\n                        left: '250px',\n                        color: '#FC842D',\n                      }}\n                    />\n                  )}\n\n                  <ErrorMessage name='password' component={Error} />\n                </label>\n              </li>\n            </List>\n\n            <ButtonWrapper>\n              <Button type='submit' full={true} style={{ width: '200px' }}>\n                Register\n              </Button>\n\n              <div onClick={handleClick}>\n                <Button type='button' full={false}>\n                  Log In\n                </Button>\n              </div>\n            </ButtonWrapper>\n          </Form>\n        </Formik>\n      </Wrapper>\n    </WrapperWithFruits>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Wrapper","styled","ButtonWrapper","H2","p","theme","fonts","body","fontSizes","lineHeights","colors","orange","WrapperWithFruits","StrawberryTablet","leavesTablet","bananaTablet","VectorTablet","leavesTabletRetina","StrawberryTabletRetina","bananaTabletRetina","VectorTabletRetina","leaves","Strawberry","banana","Vector","leavesRetina","StrawberryRetina","bananaRetina","VectorRetina","schema","yup","shape","name","min","max","required","password","email","initialValues","isChristmas","useContext","ThemeContext","userDataForRegister","useLocation","state","localStorage","setItem","JSON","stringify","navigate","useNavigate","useRegisterUserMutation","registerUser","registerStatus","status","dispatch","useDispatch","useLogInUserMutation","loginUser","loginStatus","useState","isShowPassword","setIsShowPassword","handleSubmit","values","resetForm","userDataForRegisterAll","unwrap","user","loginValues","userLogin","setCredentials","setUser","routes","console","error","handleShowPassword","onSubmit","validationSchema","style","display","gridTemplateColumns","type","placeholder","component","Error","position","maxLength","onClick","top","left","color","full","width"],"sourceRoot":""}